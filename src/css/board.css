@keyframes fadeIn {
  from { opacity: 0; }
  to   { opacity: 1; }
}

@keyframes popIn {
  0%   { opacity: 0; transform: scale(0.3); }
  60%  { opacity: 1; transform: scale(1.1); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes arrowPopIn {
  0% {
    opacity: 0;
    transform: scale(0.3) rotate(-45deg);
  }
  60% {
    opacity: 1;
    transform: scale(1.1) rotate(-45deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(-45deg);
  }
}


.border {
  border: 0.6rem solid #585858;
  border-radius: 0.4rem;
  padding: 0.5rem;
  background-color: #2f2f2f;
  box-shadow: 0 0 3rem black;
  border-style: outset; 

  width: fit-content;
  background-position: center;
}

.board {
  width: 39rem;
  background-image: url('/board.png');
  background-repeat: no-repeat;
  background-size: cover;

  /* Squares on board */
  display: grid;
  grid-template: repeat(8, 1fr) / repeat(8, 1fr);
}

.arrow {
  position: absolute;
  height: 2.7rem;
  top: 29rem;
  left: 19rem;
  opacity: 0;
  
  animation: arrowPopIn 250ms ease-out var(--delay) forwards;

  pointer-events: none;      /* so clicks/presses pass straight through */
  -webkit-user-drag: none;   /* prevent the browser’s default drag image */
  user-select: none;         /* avoid accidental selection on desktop */
}

.captured-icons-container {
  position: absolute;    /* or relative to whatever parent you want */
  top: 1rem;             /* tweak as needed */
  left: 45rem;
  display: flex;
  flex-direction: column;/* or row if you prefer */
  gap: 0.5rem;
}

.captured-icon {
  width: 2.6rem;
  height: 2.6rem;
  object-fit: contain;
  cursor: pointer;
}

.captured-icon:hover {
  transform: scale(1.3);
}

.board-progress-container {
  display: flex;
  flex-direction: row;
}

.square {
  aspect-ratio: 1 / 1;
  width: 100%;
  height: 100%;
  position: relative;
}

/* highlight the square under the cursor while dragging */
.square.hovered {
  box-shadow: inset 0 0 0 0.25rem white;
}

.piece {
  opacity: 1;
  animation: none;
  pointer-events: auto;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* only apply popIn when .initial is present on the wrapper */
.board-wrapper.initial .piece {
  animation: popIn 0.5s ease both;
  animation-delay: var(--delay, 0s);
}

.piece:hover {
  cursor: url('/open-cursor.png') 4 4, auto;
}

.piece:active {
  cursor: url('/grab-cursor.png') 4 4, auto;
}

.piece.faded {
  opacity: 0;
}

.board-wrapper {
  opacity: 0;
  animation: fadeIn 0.5s ease-in-out 0.2s forwards;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 5.3rem;
  left: 26rem;
  display: flex;
  flex-direction: row;
  align-items: stretch;
}

.progress-bar {
  width: 1.7rem;              /* thickness of the bar */
  background: #444;        /* track color */
  margin-right: 1rem;      /* space between bar & board */
  border-radius: 0.3rem;      /* rounded corners on track */
  overflow: hidden;        /* clip the fill */
  position: relative;
}

/* The colored fill that grows from bottom up */
.progress-fill {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background: white;
  /* animate height changes over 2s */
  transition: height 2s ease;
  height: 0; /* ensure we start at zero */
}

.progress-label {
  position: absolute;
  bottom: 0.2rem;
  width: 100%;
  text-align: center;
  color: black;
  font-size: 0.6rem;
}

@media (orientation: portrait) {
  .board {
    width: 90rem;
  }
  .board-wrapper {
    flex-direction: column-reverse;
    justify-content: center;
    align-items: center;
    top: 17rem;
    /* left: 21rem; */
    left: 1.5rem;
    align-items: stretch;
  }
  .board-progress-container {
    display: flex;
    margin-bottom: 1rem;
  }
  .progress-label {
    font-size: 1.5rem;
  }
  .progress-bar {
    width: 3.5rem;
  }
  
  .arrow {
    height: 6rem;
    top: 66rem;
    left: 41rem;
  }

  .captured-icons-container {
    top: 117rem;
    left: 14rem;
    flex-direction: row;
    align-items: center;
    gap: 0.5rem;
  }

  .captured-icon {
    height: 10rem;
    width: 10rem;
  }
}


/* Remove scrollable for phone use */
.board,
.square,
.piece {
  touch-action: none;
  overscroll-behavior: contain;
}

@media (orientation: landscape) {
  /* only when there’s a capturedPiece and is horizontal*/
  .board-wrapper.shifted {
    transform: translateX(-20%);
  }
}